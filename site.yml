---

# now running everything as root; no sudo, no typing passwords

# test connections:
#  ansible all -m ping -vvv

# to prepare a host, aptitude install python-apt python-pip python-pycurl python-keyczar
# to run this:
#  sudo ./playbook -l dash -t gitannex

# supervisord is installed as a dependency. put meta/main.yml in those roles
    
- hosts: all
  handlers:
    - include: handlers/main.yml
  roles:
    - {role: ppa, tags: ['ppa']}
    - {role: supdebug, tags: ['supdebug']}
    - {role: cjdns, tags: ['cjdns']}
  tasks:
    - apt: pkg=djbdns state=present
      tags: ['djbdns']
      when: ansible_distribution != "Debian"
  
- hosts: big
  handlers:
    - include: handlers/main.yml
  roles:
    - {role: nodejs, tags: ['nodejs']}
    - {role: bigasterisk_users, tags: ['bigasterisk_users']}
    - {role: unison, tags: ['unison']}
    - {role: hosts, tags: ['hosts']}
  tasks:
    - name: no UseDNS on ssh server
      lineinfile: dest=/etc/ssh/sshd_config regexp="^UseDNS\b" line="UseDNS no"
      notify: sshd restart

- hosts: prime
  handlers:
    - include: handlers/main.yml
  roles:
    - {role: supervisor_at_boot, tags: ['supervisor_at_boot']}
    - {role: bigasterisk_users, tags: ['bigasterisk_users']}
    - {role: nginx_ssl_certs, tags: ['nginx_forward', 'nginx_ssl_certs']}
    - {role: nginx_forward, tags: ['nginx_forward', 'nginx_server']}
    - {role: nginx_static_data, tags: ['nginx_forward', 'nginx_static_data']}
    - {role: postfix, tags: ['postfix']}
    - {role: dovecot, tags: ['dovecot']}
    - {role: docker, tags: ['docker']}
    - {role: map_mqtt_receiver, tags: ['map_mqtt_receiver']}
    - {role: openvpn_server, tags: ['openvpn_server']}
    - {role: prime_firewall, tags: ['prime_firewall']}
  tasks:
    - hostname: name=prime

- hosts: bang
  handlers:
    - include: handlers/main.yml
  roles:
    - {role: hosts, tags: ['hosts']}
    - {role: x_bang, tags: ['x_bang']}
    - {role: sesame, tags: ['sesame']}
    - {role: mongo, tags: ['mongo']}
# for phone talking to bigasterisk.com at home
    - {role: map_mqtt_receiver, tags: ['map_mqtt_receiver']}
    - {role: checkvistpost, tags: ['checkvistpost']}
    - {role: supervisord_local, tags: ['supervisord_local']}
    - {role: photo, tags: ['photo']}
    - {role: network_bigasterisk_gateway, tags: ['network_bigasterisk_gateway']}
    - {role: nginx_ssl_certs, tags: ['nginx_ssl_certs']}
    - {role: dropbox, tags: ['dropbox']}
    - {role: dovecot_home, tags: ['dovecot_home']}
    - {role: ruler, tags: ['ruler']}
    - {role: ruler_server, tags: ['ruler']}
    - {role: ruler_client, tags: ['ruler']}
    - {role: ajaxterm, tags: ['ajaxterm']}
    - {role: shortener, tags: ['shortener']}
    - {role: collectd, tags: ['collectd']}
    - {role: graphite, tags: ['graphite']}
    - {role: minetest_server, tags: ['minetest_server']}
    - {role: mail_bang, tags: ['mail']}
    - {role: elastic, tags: ['elastic']}
    - {role: blog, tags: ['blog']}
    - {role: photo_worker, tags: ['photo_worker']}
    - {role: magma, tags: ['magma']}
    
  tasks:
    - apt: pkg=nginx
      tags: ['nginx']
    - service: name=nginx enabled=no
      tags: ['nginx']
    - include: tasks/bang_processes.yml
    - include: tasks/bang_processes_map.yml
    - include: tasks/bang_sites.yml

- include: websites.yml
      
- hosts: dash
  handlers:
    - include: handlers/main.yml
  roles:
    - {role: cups, tags: ['cups']}
    - {role: supervisord, tags: ['supervisord']}
    - {role: mail_relay, tags: ['mail_relay']}
    - {role: photo_worker, tags: ['photo_worker']}
    - {role: ruler_server, tags: ['ruler']}
    - {role: ruler_client, tags: ['ruler']}
    - {role: collectd, tags: ['collectd']}
  tasks:
    - include: tasks/dash_processes.yml

- hosts: slash
  handlers:
    - include: handlers/main.yml
  roles:
    - {role: supervisord, tags: ['supervisord']}
    - {role: photo_worker, tags: ['photo_worker']}
    - { role: webcam, camName: 'c0', port: 9020, config: 'slash.json' }
#    - { role: webcam, camName: 'frontDoor', port: 9023, config: 'slash4.json' }
#    - { role: webcam, camName: 'livingRoom', port: 9025, config: 'slash5.json' }
  tasks:
    - include: tasks/slash_processes.yml

- hosts: plus
  handlers:
    - include: handlers/main.yml
  roles:
    - {role: bigasterisk_users, tags: ['bigasterisk_users']}
    - {role: hosts, tags: ['hosts']}
    - {role: supervisord, tags: ['supervisord']}
    - {role: laptop_x11, tags: ['laptop_x11']}

- hosts: brace
  handlers:
    - include: handlers/main.yml
  roles:
    - {role: supervisor_at_boot, tags: ['supervisor_at_boot']}
    - {role: ari_room_screen, tags: ['ari_room_screen']}
    - {role: x11servescreen, tags: ['x11servescreen']}
#    - {role: raspi_airport_speaker, tags: ['raspi_airport_speaker']}

- hosts: star
  handlers:
    - include: handlers/main.yml
  roles:
    - { role: webcam, camName: 'printer', port: 9016, config: 'star.json', tags: ['webcam'] }
  tasks:
    - include: tasks/star_processes.yml
      
- hosts: stor
  gather_facts: no
  handlers:
    - include: handlers/main.yml
  roles:
    - {role: network_stor, tags: ['network_stor']}
    - {role: zfs_server, tags: ['zfs_server']}
    - {role: zfs_monitorable, tags: ['zfs_monitorable']}
    - {role: zfs_auto_snapshot, tags: ['zfs_auto_snapshot']}
    - {role: bigasterisk_users, tags: ['bigasterisk_users']}

- hosts: grapes
  gather_facts: no
  handlers:
    - include: handlers/main.yml
  roles:
    - boot2gecko
    - rpi_buttons

- hosts: bling
  gather_facts: no
  handlers:
    - include: handlers/main.yml

- hosts: with_speakers
  handlers:
    - include: handlers/main.yml
  roles:
    - {role: pulse, tags: ['pulse']}
    - {role: mpd, tags: ['mpd']}
    - {role: ympd, tags: ['ympd']}
    - {role: speech_music, tags: ['speech_music']}
    - {role: mpdweb, tags: ['mpdweb']}
    # - mpdpandorafeeder # not working yet
    - {role: pianobar_web, tags: ['pianobar_web']}

- hosts: pi
  handlers:
    - include: handlers/main.yml
  roles:
    - {role: pi_users, tags: ['pi_users']}    
    - {role: hosts, tags: ['hosts']}
    - {role: supervisor_at_boot, tags: ['supervisor_at_boot']}
    - {role: raspi_airport_speaker, tags: ['raspi_speaker']}
    - {role: pigpio, tags: ['pigpio']}
    - {role: raspi_ws2812, tags: ['raspi_ws2812']}
    - {role: raspi_io_node, tags: ['raspi_io_node']}    

- hosts: pi
  handlers:
    - include: handlers/main.yml
  roles:
    - {role: raspi_cam, tags: ['raspi_cam']}
  
- hosts: with_x11
  handlers:
    - include: handlers/main.yml
  roles:
    - {role: homeauto_dpms, tags: ['homeauto_dpms']}
    - {role: homeauto_xidle, tags: ['homeauto_xidle']}

- hosts: with_removable_storage
  handlers:
    - include: handlers/main.yml
  roles:
    - {role: auto_mount_removable, tags: ['auto_mount_removable']}
    
- hosts: nfs_server:nfs_client
  handlers:
    - include: handlers/main.yml
  roles:
    - {role: photo_fileschangedpost, tags: ['photo_fileschangedpost']}

- hosts: nfs_client
  handlers:
    - include: handlers/main.yml
  tasks:
    - apt: pkg=nfs-common state=present
    # this mount fails on bang if ext network isn't up (!). rpc.statd
    # crashes or something
    - mount:
        fstype=nfs
        name=/my
        src=10.1.0.2:/stor6/my
        state=mounted
        
- hosts: sshfs_client
  handlers:
    - include: handlers/main.yml
  roles:
    - {role: my_sshfs, tags: ['my_sshfs']}


- hosts: vpn_client
  #gather_facts: no
  handlers:
    - include: handlers/main.yml
  roles:
    - {role: openvpn_client, tags: ['openvpn_client']}

- hosts: piedmont
  roles:
    - {role: raspi_kiosk, tags: ['raspi_kiosk']}
    
